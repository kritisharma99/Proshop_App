{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL } from '../const/orderConstant';\nimport { logout } from './userActions';\nexport const createOrder = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    // Log user in immediately after successful registration\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","logout","createOrder","user","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","order","payload","error","message","response"],"sources":["/Users/monarch/Documents/MERN/ProShop/frontend/src/actions/orderAction.js"],"sourcesContent":["import axios from 'axios'\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL} from '../const/orderConstant'\nimport { logout } from './userActions'\n\nexport const createOrder = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n          type: ORDER_CREATE_REQUEST,\n        })\n    \n        const {\n          userLogin: { userInfo },\n        } = getState()\n    \n        const config = {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`,\n          },\n        }\n    \n        const { data } = await axios.post(`/api/orders`, order,config)\n     // Log user in immediately after successful registration\n        dispatch({\n          type: ORDER_CREATE_SUCCESS,\n          payload: data,\n        })\n      } catch (error) {\n        const message =\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        if (message === 'Not authorized, token failed') {\n          dispatch(logout())\n        }\n        dispatch({\n          type:ORDER_CREATE_FAIL,\n          payload: message,\n        })\n    }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,oBAAoB,EAAEC,iBAAiB,QAAO,wBAAwB;AACrG,SAASC,MAAM,QAAQ,eAAe;AAEtC,OAAO,MAAMC,WAAW,GAAIC,IAAI,IAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC/D,IAAI;IACAD,QAAQ,CAAC;MACPE,IAAI,EAAER;IACR,CAAC,CAAC;IAEF,MAAM;MACJS,SAAS,EAAE;QAAEC;MAAS;IACxB,CAAC,GAAGH,QAAQ,EAAE;IAEd,MAAMI,MAAM,GAAG;MACbC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAC1C;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAE,aAAY,EAAEC,KAAK,EAACN,MAAM,CAAC;IACjE;IACGL,QAAQ,CAAC;MACPE,IAAI,EAAEP,oBAAoB;MAC1BiB,OAAO,EAAEH;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,MAAMC,OAAO,GACXD,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACN,IAAI,CAACK,OAAO,GACzCD,KAAK,CAACE,QAAQ,CAACN,IAAI,CAACK,OAAO,GAC3BD,KAAK,CAACC,OAAO;IACnB,IAAIA,OAAO,KAAK,8BAA8B,EAAE;MAC9Cd,QAAQ,CAACH,MAAM,EAAE,CAAC;IACpB;IACAG,QAAQ,CAAC;MACPE,IAAI,EAACN,iBAAiB;MACtBgB,OAAO,EAAEE;IACX,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}