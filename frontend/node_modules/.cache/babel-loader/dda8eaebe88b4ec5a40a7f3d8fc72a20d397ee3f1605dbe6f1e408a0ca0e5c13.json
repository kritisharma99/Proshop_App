{"ast":null,"code":"import { combineReducers, applyMiddleware, createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productDetailsReducer, productReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from './reducers/cartReducers';\n// const reducer = combineReducers({\n//     productList : productReducer,\n// })\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = configureStore({\n  reducer: {\n    productList: productReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer\n  },\n  preloadedState: initialState\n  // composeWithDevTools(applyMiddleware(...middleware))\n});\n\nexport default store;","map":{"version":3,"names":["combineReducers","applyMiddleware","createStore","configureStore","thunk","composeWithDevTools","productDetailsReducer","productReducer","cartReducer","cartItemFromStorage","localStorage","getItem","JSON","parse","initialState","cart","cartItems","middleware","store","reducer","productList","productDetails","preloadedState"],"sources":["/Users/monarch/Documents/MERN/ProShop/frontend/src/store.js"],"sourcesContent":["import { combineReducers, applyMiddleware, createStore } from 'redux'\nimport { configureStore } from '@reduxjs/toolkit';\nimport thunk from \"redux-thunk\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\nimport { productDetailsReducer, productReducer } from \"./reducers/productReducers\"\nimport { cartReducer } from './reducers/cartReducers';\n// const reducer = combineReducers({\n//     productList : productReducer,\n// })\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')):[]\nconst initialState ={\n    cart: { cartItems:cartItemFromStorage}\n}\nconst middleware = [thunk]\nconst store = configureStore({\n    reducer : {\n        productList : productReducer,\n        productDetails : productDetailsReducer,\n        cart : cartReducer\n    }, \n    preloadedState: initialState, \n    // composeWithDevTools(applyMiddleware(...middleware))\n})\n\nexport default store\n\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACrE,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,qBAAqB,EAAEC,cAAc,QAAQ,4BAA4B;AAClF,SAASC,WAAW,QAAQ,yBAAyB;AACrD;AACA;AACA;AACA,MAAMC,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAC,EAAE;AAChH,MAAMG,YAAY,GAAE;EAChBC,IAAI,EAAE;IAAEC,SAAS,EAACP;EAAmB;AACzC,CAAC;AACD,MAAMQ,UAAU,GAAG,CAACb,KAAK,CAAC;AAC1B,MAAMc,KAAK,GAAGf,cAAc,CAAC;EACzBgB,OAAO,EAAG;IACNC,WAAW,EAAGb,cAAc;IAC5Bc,cAAc,EAAGf,qBAAqB;IACtCS,IAAI,EAAGP;EACX,CAAC;EACDc,cAAc,EAAER;EAChB;AACJ,CAAC,CAAC;;AAEF,eAAeI,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}