{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST } from '../const/orderConstant';\nimport { logout } from '../actions/userAction';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      user: {\n        userinfo\n      }\n    } = getState();\n    console.log(\"userInfo from order:\", userinfo);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userinfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    // Log user in immediately after successful registration\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      user: {\n        userinfo\n      }\n    } = getState();\n    console.log(\"userInfo from order:\", userinfo);\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userinfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    // Log user in immediately after successful registration\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      user: {\n        userinfo\n      }\n    } = getState();\n    console.log(\"userInfo from order:\", userinfo);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userinfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    // Log user in immediately after successful registration\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      user: {\n        userinfo\n      }\n    } = getState();\n    console.log(\"userInfo from order:\", userinfo);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userinfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    // Log user in immediately after successful registration\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_MY_REQUEST","logout","createOrder","order","dispatch","getState","type","user","userinfo","console","log","config","headers","Authorization","token","data","post","payload","error","message","response","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders","ORDER_LIST_MY_SUCCESS"],"sources":["/Users/monarch/Documents/MERN/ProShop/frontend/src/actions/orderAction.js"],"sourcesContent":["import axios from 'axios'\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST} from '../const/orderConstant'\nimport { logout } from '../actions/userAction'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n          type: ORDER_CREATE_REQUEST,\n        })\n    \n        const {\n          user: { userinfo },\n        } = getState()\n        console.log(\"userInfo from order:\",userinfo)\n        const config = {\n          headers: {\n            'Content-Type':'application/json',\n            Authorization: `Bearer ${userinfo.token}`,\n          },\n        }\n    \n        const { data } = await axios.post(`/api/orders`, order,config)\n     // Log user in immediately after successful registration\n        dispatch({\n          type: ORDER_CREATE_SUCCESS,\n          payload: data,\n        })\n      } catch (error) {\n        const message =\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        if (message === 'Not authorized, token failed') {\n          dispatch(logout())\n        }\n        dispatch({\n          type:ORDER_CREATE_FAIL,\n          payload: message,\n        })\n    }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n      dispatch({\n        type: ORDER_DETAILS_REQUEST,\n      })\n  \n      const {\n        user: { userinfo },\n      } = getState()\n      console.log(\"userInfo from order:\",userinfo)\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userinfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.get(`/api/orders/${id}`,config)\n   // Log user in immediately after successful registration\n      dispatch({\n        type: ORDER_DETAILS_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n      }\n      dispatch({\n        type:ORDER_DETAILS_FAIL,\n        payload: message,\n      })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n      dispatch({\n        type: ORDER_PAY_REQUEST,\n      })\n  \n      const {\n        user: { userinfo },\n      } = getState()\n      console.log(\"userInfo from order:\",userinfo)\n      const config = {\n\n        headers: {\n          'Content-Type':'application/json',\n          Authorization: `Bearer ${userinfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config)\n   // Log user in immediately after successful registration\n      dispatch({\n        type: ORDER_PAY_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n      }\n      dispatch({\n        type:ORDER_PAY_FAIL,\n        payload: message,\n      })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n      dispatch({\n        type: ORDER_LIST_MY_REQUEST,\n      })\n  \n      const {\n        user: { userinfo },\n      } = getState()\n      console.log(\"userInfo from order:\",userinfo)\n      const config = {\n\n        headers: {\n          'Content-Type':'application/json',\n          Authorization: `Bearer ${userinfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config)\n   // Log user in immediately after successful registration\n      dispatch({\n        type: ORDER_LIST_MY_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n      }\n      dispatch({\n        type:ORDER_PAY_FAIL,\n        payload: message,\n      })\n  }}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}