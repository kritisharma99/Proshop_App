{"ast":null,"code":"var _jsxFileName = \"/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/PaymentMethodScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Row, Col, FormLabel, FormGroup, FormCheck } from \"react-bootstrap\";\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport CheckoutStep from '../components/CheckoutStep';\nimport { register } from \"../actions/userAction\";\nimport { savePaymentMethod } from '../actions/cartAction';\nimport FormContainer from '../components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaymentMethodScreen() {\n  _s();\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  if (!shippingAddress) {\n    navigate('/shipping');\n  }\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const submitHandler = e => {\n    e.preventDefault();\n    // console.log('submit')\n    dispatch(savePaymentMethod(paymentMethod));\n    navigate('/placeorder');\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutStep, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          as: \"legend\",\n          children: \"Select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(FormCheck, {\n            type: \"radio\",\n            label: \"PayPal or Credit Card\",\n            id: \"PayPal\",\n            name: \"paymentMethod\",\n            value: \"PayPal\",\n            checked: true,\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"my-3\",\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(PaymentMethodScreen, \"54Z8Ht3kiytcNsyFIP7Ub4P2vM0=\", false, function () {\n  return [useSelector, useNavigate, useDispatch];\n});\n_c = PaymentMethodScreen;\nexport default PaymentMethodScreen;\nvar _c;\n$RefreshReg$(_c, \"PaymentMethodScreen\");","map":{"version":3,"names":["React","useState","Form","Button","Row","Col","FormLabel","FormGroup","FormCheck","useLocation","useNavigate","useDispatch","useSelector","Message","Loader","CheckoutStep","register","savePaymentMethod","FormContainer","PaymentMethodScreen","cart","state","shippingAddress","navigate","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","target","value"],"sources":["/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/PaymentMethodScreen.jsx"],"sourcesContent":["import React, {useState} from 'react'\nimport { Form, Button, Row, Col, FormLabel, FormGroup, FormCheck} from \"react-bootstrap\"\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector} from  \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport CheckoutStep from '../components/CheckoutStep'\nimport { register } from \"../actions/userAction\"\nimport { savePaymentMethod } from '../actions/cartAction'\nimport FormContainer from '../components/FormContainer'\nfunction PaymentMethodScreen() {\n\n    const cart = useSelector(state=>state.cart)\n    const { shippingAddress} = cart\n\n    if(!shippingAddress){\n        navigate('/shipping')\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n    \n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) =>{\n        e.preventDefault()\n        // console.log('submit')\n        dispatch(savePaymentMethod(paymentMethod))\n        navigate('/placeorder')\n    }\n  return (\n    <FormContainer>\n      <CheckoutStep step1 step2 step3/>\n      <h1>Payment Method</h1>\n      <br></br>\n      <Form onSubmit={submitHandler}>\n            <FormGroup>\n                <FormLabel as=\"legend\">\n                    Select Method\n                </FormLabel>\n                <Col>\n                    <FormCheck type=\"radio\" label=\"PayPal or Credit Card\" id=\"PayPal\" name=\"paymentMethod\" \n                    value='PayPal' checked onChange={(e)=>setPaymentMethod(e.target.value)}>\n\n                    </FormCheck>\n                </Col>\n            </FormGroup>\n            <Button className=\"my-3\" type=\"submit\" variant='primary'>Continue</Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentMethodScreen\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,IAAI,EAAEC,MAAM,EAAEC,GAAG,EAAEC,GAAG,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,QAAO,iBAAiB;AACxF,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,OAAOC,aAAa,MAAM,6BAA6B;AAAA;AACvD,SAASC,mBAAmB,GAAG;EAAA;EAE3B,MAAMC,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACD,IAAI,CAAC;EAC3C,MAAM;IAAEE;EAAe,CAAC,GAAGF,IAAI;EAE/B,IAAG,CAACE,eAAe,EAAC;IAChBC,QAAQ,CAAC,WAAW,CAAC;EACzB;EAEA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC,QAAQ,CAAC;EAE5D,MAAMsB,QAAQ,GAAGb,WAAW,EAAE;EAC9B,MAAMgB,QAAQ,GAAGf,WAAW,EAAE;EAE9B,MAAMgB,aAAa,GAAIC,CAAC,IAAI;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClB;IACAH,QAAQ,CAACT,iBAAiB,CAACO,aAAa,CAAC,CAAC;IAC1CD,QAAQ,CAAC,aAAa,CAAC;EAC3B,CAAC;EACH,oBACE,QAAC,aAAa;IAAA,wBACZ,QAAC,YAAY;MAAC,KAAK;MAAC,KAAK;MAAC,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAE,eACjC;MAAA,UAAI;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,eACvB;MAAA;MAAA;MAAA;IAAA,QAAS,eACT,QAAC,IAAI;MAAC,QAAQ,EAAEI,aAAc;MAAA,wBACxB,QAAC,SAAS;QAAA,wBACN,QAAC,SAAS;UAAC,EAAE,EAAC,QAAQ;UAAA,UAAC;QAEvB;UAAA;UAAA;UAAA;QAAA,QAAY,eACZ,QAAC,GAAG;UAAA,uBACA,QAAC,SAAS;YAAC,IAAI,EAAC,OAAO;YAAC,KAAK,EAAC,uBAAuB;YAAC,EAAE,EAAC,QAAQ;YAAC,IAAI,EAAC,eAAe;YACtF,KAAK,EAAC,QAAQ;YAAC,OAAO;YAAC,QAAQ,EAAGC,CAAC,IAAGH,gBAAgB,CAACG,CAAC,CAACE,MAAM,CAACC,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA;QAE3D;UAAA;UAAA;UAAA;QAAA,QACV;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACZ,QAAC,MAAM;QAAC,SAAS,EAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAC,SAAS;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACzE;EAAA;IAAA;IAAA;IAAA;EAAA,QACO;AAEpB;AAAC,GAzCQZ,mBAAmB;EAAA,QAEXP,WAAW,EASPF,WAAW,EACXC,WAAW;AAAA;AAAA,KAZvBQ,mBAAmB;AA2C5B,eAAeA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}