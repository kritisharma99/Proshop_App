{"ast":null,"code":"var _jsxFileName = \"/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/LoginScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { login } from \"../actions/userAction\";\nimport FormContainer from '../components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginScreen() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const location = useLocation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.user);\n  const {\n    loading,\n    error,\n    userinfo\n  } = userLogin;\n\n  // const redirect = location.search ? location.search.split('=')[1] : '/'\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  //we want -> dont want to come to loginScreen if we alrready logged in\n  useEffect(() => {\n    if (userinfo) {\n      navigate(redirect);\n    }\n  }, [navigate, userinfo, redirect]);\n  const submitHandler = e => {\n    e.preventDefault();\n    //Dispatch login\n    dispatch(login(email, password));\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"my-3\",\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [\"New Customer? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: redirect ? `/register?redirect=${redirect}` : 'register',\n          children: \"Register Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginScreen, \"b5tR0I5sAKjDGtbFHEWlRYSL1KY=\", false, function () {\n  return [useLocation, useNavigate, useDispatch, useSelector];\n});\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useLocation","useNavigate","useDispatch","useSelector","Message","Loader","login","FormContainer","LoginScreen","email","setEmail","password","setPassword","location","navigate","dispatch","userLogin","state","user","loading","error","userinfo","redirect","search","split","submitHandler","e","preventDefault","target","value"],"sources":["/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/LoginScreen.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Link } from \"react-router-dom\"\nimport { Form, Button, Row, Col} from \"react-bootstrap\"\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector} from  \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport { login } from \"../actions/userAction\"\nimport FormContainer from '../components/FormContainer'\n\nfunction LoginScreen() {\n    const [email,setEmail] = useState('');\n    const [password,setPassword] = useState('');\n    const location = useLocation()\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.user)\n    const { loading, error, userinfo} = userLogin\n\n    // const redirect = location.search ? location.search.split('=')[1] : '/'\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    //we want -> dont want to come to loginScreen if we alrready logged in\n    useEffect(()=>{\n        if(userinfo){\n            navigate(redirect)\n        }\n    },[navigate, userinfo, redirect])\n    const submitHandler = (e) =>{\n        e.preventDefault()\n        //Dispatch login\n        dispatch(login(email,password))\n    }\n  return (\n    <FormContainer>\n      <h1>Sign in</h1>\n      <Form onSubmit={submitHandler}>\n            <Form.Group controlId='email'>\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control type='email' placeholder='Enter email' \n                value={email} onChange={(e)=>setEmail(e.target.value)} ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control type='password' placeholder='Enter password' \n                value={password} onChange={(e)=>setPassword(e.target.value)} ></Form.Control>\n            </Form.Group>\n            <Button className=\"my-3\" type=\"submit\" variant='primary'>Sign In</Button>\n      </Form>\n      <Row className=\"py-3\">\n            <Col>\n                New Customer? <Link to={redirect ? `/register?redirect=${redirect}`:'register'}>Register Now</Link>\n            </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}