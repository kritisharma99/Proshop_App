{"ast":null,"code":"import axios from \"axios\";\n// import { DRAFT_STATE } from \"immer/dist/internal\"\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from \"../const/cartConstant\";\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n///getstate is used to get any state ->ptoducts, carts, orders\nexport const removeToCart = id => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingAdress = data => async dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingadress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => async dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingadress', JSON.stringify(data));\n};\n\n// export const addToCart =(id,qty)=>async(dispatch,getState)=>{\n//     const { data } = await axios.get(`/api/products/${id}`)\n\n//     dispatch({\n//         type: CART_ADD_ITEM,\n//         payload:{\n//             product : data._id,\n//             name: data.name,\n//             image:data.image,\n//             price:data.price,\n//             countInStock:data.countInStock,\n//             qty\n//         }\n//     })\n\n//     localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\n// }","map":{"version":3,"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","id","qty","dispatch","getState","data","get","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeToCart","saveShippingAdress","savePaymentMethod"],"sources":["/Users/monarch/Documents/MERN/ProShop/frontend/src/actions/cartAction.js"],"sourcesContent":["import axios from \"axios\"\n// import { DRAFT_STATE } from \"immer/dist/internal\"\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM , CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from \"../const/cartConstant\"\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n  \n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty,\n      },\n    })\n  \n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n///getstate is used to get any state ->ptoducts, carts, orders\nexport const removeToCart = (id) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n  \n    dispatch({\n      type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAdress = (data) => async (dispatch) => {\n\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n      payload: data,\n  })\n  localStorage.setItem('shippingadress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => async (dispatch) => {\n\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n      payload: data,\n  })\n  localStorage.setItem('shippingadress', JSON.stringify(data))\n}\n\n// export const addToCart =(id,qty)=>async(dispatch,getState)=>{\n//     const { data } = await axios.get(`/api/products/${id}`)\n\n//     dispatch({\n//         type: CART_ADD_ITEM,\n//         payload:{\n//             product : data._id,\n//             name: data.name,\n//             image:data.image,\n//             price:data.price,\n//             countInStock:data.countInStock,\n//             qty\n//         }\n//     })\n\n//     localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\n// }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,aAAa,EAAEC,gBAAgB,EAAGC,0BAA0B,EAAEC,wBAAwB,QAAO,uBAAuB;AAE7H,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAE,EAAEC,GAAG,KAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAChE,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,iBAAgBL,EAAG,EAAC,CAAC;EAEvDE,QAAQ,CAAC;IACPI,IAAI,EAAEX,aAAa;IACnBY,OAAO,EAAE;MACPC,OAAO,EAAEJ,IAAI,CAACK,GAAG;MACjBC,IAAI,EAAEN,IAAI,CAACM,IAAI;MACfC,KAAK,EAAEP,IAAI,CAACO,KAAK;MACjBC,KAAK,EAAER,IAAI,CAACQ,KAAK;MACjBC,YAAY,EAAET,IAAI,CAACS,YAAY;MAC/BZ;IACF;EACF,CAAC,CAAC;EAEFa,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACd,QAAQ,EAAE,CAACe,IAAI,CAACC,SAAS,CAAC,CAAC;AAChF,CAAC;AACD;AACA,OAAO,MAAMC,YAAY,GAAIpB,EAAE,IAAK,OAAOE,QAAQ,EAAEC,QAAQ,KAAK;EAC9D,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,iBAAgBL,EAAG,EAAC,CAAC;EAEvDE,QAAQ,CAAC;IACPI,IAAI,EAAEV,gBAAgB;IACpBW,OAAO,EAAEP;EACb,CAAC,CAAC;EACFc,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACd,QAAQ,EAAE,CAACe,IAAI,CAACC,SAAS,CAAC,CAAC;AAChF,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAIjB,IAAI,IAAK,MAAOF,QAAQ,IAAK;EAE9DA,QAAQ,CAAC;IACPI,IAAI,EAAET,0BAA0B;IAC9BU,OAAO,EAAEH;EACb,CAAC,CAAC;EACFU,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,CAAC;AAC9D,CAAC;AAED,OAAO,MAAMkB,iBAAiB,GAAIlB,IAAI,IAAK,MAAOF,QAAQ,IAAK;EAE7DA,QAAQ,CAAC;IACPI,IAAI,EAAET,0BAA0B;IAC9BU,OAAO,EAAEH;EACb,CAAC,CAAC;EACFU,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,CAAC;AAC9D,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}