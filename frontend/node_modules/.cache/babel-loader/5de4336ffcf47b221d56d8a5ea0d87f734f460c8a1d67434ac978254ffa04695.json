{"ast":null,"code":"import _slicedToArray from\"/Users/monarch/Documents/MERN/ProShop/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{Form,Button,Row,Col,FormLabel,FormGroup,FormCheck}from\"react-bootstrap\";import{useLocation,useNavigate}from'react-router-dom';import{useDispatch,useSelector}from\"react-redux\";import Message from\"../components/Message\";import Loader from\"../components/Loader\";import CheckoutStep from'../components/CheckoutStep';import{register}from\"../actions/userAction\";import{savePaymentMethod}from'../actions/cartAction';import FormContainer from'../components/FormContainer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PaymentMethodScreen(){var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress){navigate('/shipping');}var _useState=useState('PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var navigate=useNavigate();var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();// console.log('submit')\ndispatch(savePaymentMethod(paymentMethod));navigate('/placeorder');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutStep,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(FormLabel,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(FormCheck,{type:\"radio\",label:\"PayPal or Credit Card\",id:\"PayPal\",name:\"paymentMethod\",value:\"PayPal\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{className:\"my-3\",type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});}export default PaymentMethodScreen;","map":{"version":3,"names":["React","useState","Form","Button","Row","Col","FormLabel","FormGroup","FormCheck","useLocation","useNavigate","useDispatch","useSelector","Message","Loader","CheckoutStep","register","savePaymentMethod","FormContainer","PaymentMethodScreen","cart","state","shippingAddress","navigate","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","target","value"],"sources":["/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/PaymentMethodScreen.jsx"],"sourcesContent":["import React, {useState} from 'react'\nimport { Form, Button, Row, Col, FormLabel, FormGroup, FormCheck} from \"react-bootstrap\"\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector} from  \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport CheckoutStep from '../components/CheckoutStep'\nimport { register } from \"../actions/userAction\"\nimport { savePaymentMethod } from '../actions/cartAction'\nimport FormContainer from '../components/FormContainer'\nfunction PaymentMethodScreen() {\n\n    const cart = useSelector(state=>state.cart)\n    const { shippingAddress} = cart\n\n    if(!shippingAddress){\n        navigate('/shipping')\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n    \n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) =>{\n        e.preventDefault()\n        // console.log('submit')\n        dispatch(savePaymentMethod(paymentMethod))\n        navigate('/placeorder')\n    }\n  return (\n    <FormContainer>\n      <CheckoutStep step1 step2 step3/>\n      <h1>Payment Method</h1>\n      <br></br>\n      <Form onSubmit={submitHandler}>\n            <FormGroup>\n                <FormLabel as=\"legend\">\n                    Select Method\n                </FormLabel>\n                <Col>\n                    <FormCheck type=\"radio\" label=\"PayPal or Credit Card\" id=\"PayPal\" name=\"paymentMethod\" \n                    value='PayPal' checked onChange={(e)=>setPaymentMethod(e.target.value)}>\n\n                    </FormCheck>\n                </Col>\n            </FormGroup>\n            <Button className=\"my-3\" type=\"submit\" variant='primary'>Continue</Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentMethodScreen\n\n"],"mappings":"oIAAA,MAAOA,MAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,OAASC,IAAI,CAAEC,MAAM,CAAEC,GAAG,CAAEC,GAAG,CAAEC,SAAS,CAAEC,SAAS,CAAEC,SAAS,KAAO,iBAAiB,CACxF,OAASC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CAC3D,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,MAAOC,QAAO,KAAM,uBAAuB,CAC3C,MAAOC,OAAM,KAAM,sBAAsB,CACzC,MAAOC,aAAY,KAAM,4BAA4B,CACrD,OAASC,QAAQ,KAAQ,uBAAuB,CAChD,OAASC,iBAAiB,KAAQ,uBAAuB,CACzD,MAAOC,cAAa,KAAM,6BAA6B,yFACvD,QAASC,oBAAmB,EAAG,CAE3B,GAAMC,KAAI,CAAGR,WAAW,CAAC,SAAAS,KAAK,QAAEA,MAAK,CAACD,IAAI,GAAC,CAC3C,GAAQE,gBAAe,CAAIF,IAAI,CAAvBE,eAAe,CAEvB,GAAG,CAACA,eAAe,CAAC,CAChBC,QAAQ,CAAC,WAAW,CAAC,CACzB,CAEA,cAA0CtB,QAAQ,CAAC,QAAQ,CAAC,wCAArDuB,aAAa,eAAEC,gBAAgB,eAEtC,GAAMF,SAAQ,CAAGb,WAAW,EAAE,CAC9B,GAAMgB,SAAQ,CAAGf,WAAW,EAAE,CAE9B,GAAMgB,cAAa,CAAG,QAAhBA,cAAa,CAAIC,CAAC,CAAI,CACxBA,CAAC,CAACC,cAAc,EAAE,CAClB;AACAH,QAAQ,CAACT,iBAAiB,CAACO,aAAa,CAAC,CAAC,CAC1CD,QAAQ,CAAC,aAAa,CAAC,CAC3B,CAAC,CACH,mBACE,MAAC,aAAa,yBACZ,KAAC,YAAY,EAAC,KAAK,MAAC,KAAK,MAAC,KAAK,OAAE,cACjC,oBAAI,gBAAc,EAAK,cACvB,aAAS,cACT,MAAC,IAAI,EAAC,QAAQ,CAAEI,aAAc,wBACxB,MAAC,SAAS,yBACN,KAAC,SAAS,EAAC,EAAE,CAAC,QAAQ,UAAC,eAEvB,EAAY,cACZ,KAAC,GAAG,wBACA,KAAC,SAAS,EAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CACtF,KAAK,CAAC,QAAQ,CAAC,OAAO,MAAC,QAAQ,CAAE,kBAACC,CAAC,QAAGH,iBAAgB,CAACG,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,EAAC,EAE3D,EACV,GACE,cACZ,KAAC,MAAM,EAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,UAAC,UAAQ,EAAS,GACzE,GACO,CAEpB,CAEA,cAAeZ,oBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}