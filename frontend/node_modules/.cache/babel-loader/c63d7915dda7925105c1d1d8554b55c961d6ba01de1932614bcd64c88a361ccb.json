{"ast":null,"code":"import { combineReducers, applyMiddleware, createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productReducer } from \"./reducers/productReducers\";\nconst reducer = combineReducers({\n  productList: productReducer\n});\nconst initialState = {};\nconst middleware = [thunk];\nconst store = configureStore({\n  reducer: productReducer\n}, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["combineReducers","applyMiddleware","createStore","configureStore","thunk","composeWithDevTools","productReducer","reducer","productList","initialState","middleware","store"],"sources":["/Users/monarch/Documents/MERN/ProShop/frontend/src/store.js"],"sourcesContent":["import { combineReducers, applyMiddleware, createStore } from 'redux'\nimport { configureStore } from '@reduxjs/toolkit';\nimport thunk from \"redux-thunk\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\nimport { productReducer } from \"./reducers/productReducers\"\nconst reducer = combineReducers({\n    productList : productReducer,\n})\nconst initialState ={}\nconst middleware = [thunk]\nconst store = configureStore({reducer : productReducer}, initialState, \n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store\n\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,eAAe,EAAEC,WAAW,QAAQ,OAAO;AACrE,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,MAAMC,OAAO,GAAGP,eAAe,CAAC;EAC5BQ,WAAW,EAAGF;AAClB,CAAC,CAAC;AACF,MAAMG,YAAY,GAAE,CAAC,CAAC;AACtB,MAAMC,UAAU,GAAG,CAACN,KAAK,CAAC;AAC1B,MAAMO,KAAK,GAAGR,cAAc,CAAC;EAACI,OAAO,EAAGD;AAAc,CAAC,EAAEG,YAAY,EACjEJ,mBAAmB,CAACJ,eAAe,CAAC,GAAGS,UAAU,CAAC,CAAC,CAAC;AAExD,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}