[{"/Users/monarch/Documents/MERN/ProShop/frontend/src/index.js":"1","/Users/monarch/Documents/MERN/ProShop/frontend/src/App.js":"2","/Users/monarch/Documents/MERN/ProShop/frontend/src/store.js":"3","/Users/monarch/Documents/MERN/ProShop/frontend/src/reportWebVitals.js":"4","/Users/monarch/Documents/MERN/ProShop/frontend/src/reducers/cartReducers.js":"5","/Users/monarch/Documents/MERN/ProShop/frontend/src/reducers/productReducers.js":"6","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/HomeScreen.jsx":"7","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/ProductScreen.jsx":"8","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/CartScreen.jsx":"9","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/Footer.jsx":"10","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/Header.jsx":"11","/Users/monarch/Documents/MERN/ProShop/frontend/src/products.js":"12","/Users/monarch/Documents/MERN/ProShop/frontend/src/const/productConst.js":"13","/Users/monarch/Documents/MERN/ProShop/frontend/src/const/cartConstant.js":"14","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/Rating.jsx":"15","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/Message.jsx":"16","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/Loader.jsx":"17","/Users/monarch/Documents/MERN/ProShop/frontend/src/actions/productAction.js":"18","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/Product.jsx":"19","/Users/monarch/Documents/MERN/ProShop/frontend/src/actions/cartAction.js":"20","/Users/monarch/Documents/MERN/ProShop/frontend/src/reducers/userReducers.js":"21","/Users/monarch/Documents/MERN/ProShop/frontend/src/const/userConstant.js":"22","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/LoginScreen.jsx":"23","/Users/monarch/Documents/MERN/ProShop/frontend/src/actions/userAction.js":"24","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/FormContainer.jsx":"25","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/RegisterScreen.jsx":"26","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/ProfileScreen.jsx":"27","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/ShippingScreen.jsx":"28","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/CheckoutStep.js":"29","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/PaymentMethodScreen.jsx":"30","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/PlaceOrderScreen.jsx":"31","/Users/monarch/Documents/MERN/ProShop/frontend/src/reducers/orderReducers.js":"32","/Users/monarch/Documents/MERN/ProShop/frontend/src/const/orderConstant.js":"33","/Users/monarch/Documents/MERN/ProShop/frontend/src/actions/orderAction.js":"34","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/OrderScreen.jsx":"35","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/UserLIstScreen.jsx":"36","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/searchBox.js":"37","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/Paginate.jsx":"38","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/ProductCarousel.jsx":"39"},{"size":648,"mtime":1675503518900,"results":"40","hashOfConfig":"41"},{"size":2182,"mtime":1678000203207,"results":"42","hashOfConfig":"41"},{"size":2057,"mtime":1678000629441,"results":"43","hashOfConfig":"41"},{"size":362,"mtime":1675192685584,"results":"44","hashOfConfig":"41"},{"size":1313,"mtime":1676435125033,"results":"45","hashOfConfig":"41"},{"size":2348,"mtime":1678000558433,"results":"46","hashOfConfig":"41"},{"size":2234,"mtime":1678007648901,"results":"47","hashOfConfig":"41"},{"size":8978,"mtime":1677929785566,"results":"48","hashOfConfig":"41"},{"size":4176,"mtime":1676397564222,"results":"49","hashOfConfig":"41"},{"size":383,"mtime":1675194594684,"results":"50","hashOfConfig":"41"},{"size":2431,"mtime":1677956101888,"results":"51","hashOfConfig":"41"},{"size":2486,"mtime":1675280784570,"results":"52","hashOfConfig":"41"},{"size":822,"mtime":1678000378018,"results":"53","hashOfConfig":"41"},{"size":236,"mtime":1676434796250,"results":"54","hashOfConfig":"41"},{"size":1534,"mtime":1675271388603,"results":"55","hashOfConfig":"41"},{"size":256,"mtime":1675535157478,"results":"56","hashOfConfig":"41"},{"size":314,"mtime":1675534499352,"results":"57","hashOfConfig":"41"},{"size":3056,"mtime":1678005858447,"results":"58","hashOfConfig":"41"},{"size":949,"mtime":1675276029032,"results":"59","hashOfConfig":"41"},{"size":1937,"mtime":1677004411956,"results":"60","hashOfConfig":"41"},{"size":3044,"mtime":1677870160121,"results":"61","hashOfConfig":"41"},{"size":1209,"mtime":1677869090235,"results":"62","hashOfConfig":"41"},{"size":2525,"mtime":1676395572886,"results":"63","hashOfConfig":"41"},{"size":6167,"mtime":1677871427558,"results":"64","hashOfConfig":"41"},{"size":345,"mtime":1675875494731,"results":"65","hashOfConfig":"41"},{"size":3364,"mtime":1676092122964,"results":"66","hashOfConfig":"41"},{"size":5999,"mtime":1677828981849,"results":"67","hashOfConfig":"41"},{"size":2604,"mtime":1676404925513,"results":"68","hashOfConfig":"41"},{"size":1537,"mtime":1676404822701,"results":"69","hashOfConfig":"41"},{"size":1803,"mtime":1676435267216,"results":"70","hashOfConfig":"41"},{"size":6720,"mtime":1676965987284,"results":"71","hashOfConfig":"41"},{"size":2610,"mtime":1677330059496,"results":"72","hashOfConfig":"41"},{"size":803,"mtime":1677329818644,"results":"73","hashOfConfig":"41"},{"size":4285,"mtime":1677322730277,"results":"74","hashOfConfig":"41"},{"size":8506,"mtime":1677264014520,"results":"75","hashOfConfig":"41"},{"size":3239,"mtime":1677873475699,"results":"76","hashOfConfig":"41"},{"size":866,"mtime":1677953700656,"results":"77","hashOfConfig":"41"},{"size":649,"mtime":1677962218862,"results":"78","hashOfConfig":"41"},{"size":1252,"mtime":1678005539488,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"yohuj4",{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"83"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"83"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"83"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"83"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"83"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"83"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"83"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"83"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"83"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"83"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"83"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"83"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"/Users/monarch/Documents/MERN/ProShop/frontend/src/index.js",[],[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/App.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/store.js",["213","214","215","216","217"],[],"import { combineReducers, applyMiddleware, createStore } from 'redux'\nimport { configureStore } from '@reduxjs/toolkit';\nimport thunk from \"redux-thunk\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\nimport { productDetailsReducer, productReducer, productReviewCreateReducer,productTopReducer } from \"./reducers/productReducers\"\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, \n    userUpdateReducer, userListReducer, userDeleteReducer } from './reducers/userReducers';\n// const reducer = combineReducers({\n//     productList : productReducer,\n// })\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')):[]\nconst userInfoFromStorage = localStorage.getItem('userinfo') ? JSON.parse(localStorage.getItem('userinfo')):null\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')):{}\nconst initialState ={\n    cart: { cartItems:cartItemFromStorage,\n        shippingAddress:shippingAddressFromStorage\n    },\n    user:{userinfo:userInfoFromStorage}\n}\nconst middleware = [thunk]\nconst store = configureStore({\n    reducer : {\n        productList : productReducer,\n        productDetails : productDetailsReducer,\n        productReviewCreate: productReviewCreateReducer,\n        productTop:productTopReducer,\n        cart : cartReducer,\n        user: userLoginReducer,\n        userRegister: userRegisterReducer,\n        userDetails: userDetailsReducer,\n        userUpdate: userUpdateReducer,\n        orderCreate: orderCreateReducer,\n        orderDetails: orderDetailsReducer,\n        orderPay: orderPayReducer,\n        orderListMy: orderListMyReducer,\n        usersList : userListReducer,\n        userDelete: userDeleteReducer\n    }, \n    preloadedState: initialState, \n    // applyMiddleware(thunk)\n})\n\nexport default store\n\n","/Users/monarch/Documents/MERN/ProShop/frontend/src/reportWebVitals.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/reducers/cartReducers.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/reducers/productReducers.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/HomeScreen.jsx",["218","219"],[],"import React,{ useState, useEffect } from 'react'\nimport {useDispatch, useSelector } from \"react-redux\"\nimport { Row, Col} from \"react-bootstrap\"\nimport {Helmet} from \"react-helmet\"\n// import products from \"../products\"\nimport { Link, useParams } from \"react-router-dom\";\nimport Product from '../components/Product'\nimport { listProducts } from \"../actions/productAction\"\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate';\nimport ProductCarousel from '../components/ProductCarousel';\n// import axios from \"axios\"\nconst HomeScreen = ({match}) => {\n  //for search purpose\n  let param = useParams();\n  let keyword = param.keyword\n  console.log(\"keyword:\",param.keyword)\n\n  const pageNumber = param.pageNumber || 1\n\n\n    \n  // making it comment because now we are using redux global state not component level state\n  // const [products,setProducts] = useState([])\n  const dispatch = useDispatch()\n  const { loading, error, products, page, pages } = useSelector((state) => state.productList)\n \n  useEffect(()=>{\n    //making this comment -> we are not making direct axios call like thisbelow\n    //now we will use listProduct from \"productAction.js\"\n    // const fetchProducts =async()=>{\n    //   // const res = axios.get(\"/api/products\")\n    //   // res.data\n    //   const { data } = await axios.get(\"/api/products\")\n    //   console.log(data)\n    //   setProducts(data)\n    // }\n    // fetchProducts()\n    dispatch(listProducts(keyword,pageNumber))\n\n  },[dispatch,keyword,pageNumber])\n  console.log(\"products:\",products)\n  return (\n    <>\n    <Helmet>\n      <title>Welcome to ProShop | Home</title>\n    </Helmet>\n      {!keyword && <ProductCarousel/>}\n      <h1>Latest Products</h1>\n      {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message>\n      :\n      <>\n      <Row>\n      {products.map(product => (\n          <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n              {/* <h3>{product.name}</h3> */}\n              <Product product={product}/>\n          </Col>\n      ))}\n      </Row>\n      <Paginate pages={pages} page={page} keyword={keyword ? keyword: ''}/>\n      </>}\n      \n    </>\n  )\n}\n\nexport default HomeScreen\n","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/ProductScreen.jsx",["220","221","222"],[],"import React,{ useState, useEffect } from 'react'\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProductDetails, createProductReview } from \"../actions/productAction\"\nimport { useNavigate } from \"react-router-dom\"\nimport { Row, Col, Image, ListGroup, Card, Button, ListGroupItem, Form} from \"react-bootstrap\"\nimport Rating from \"../components/Rating\"\nimport products from '../products'\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../const/productConst\"\n// import axios from 'axios';\n\nfunction ProductScreen({match}) {\n    let { id } = useParams();\n    id = String(id)\n    id = id.split(\"}\")[0]\n    console.log(id)\n    // const product = products.find((p) => (String(p._id === id)));\n    // const [product,setProduct] = useState({});\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n    console.log(loading,error,product)\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const { loading:loadingProductReview, success:successProductReview, error:errorProductReview } = productReviewCreate\n\n    const userLogin = useSelector(state => state.user)\n    const { userinfo } = userLogin\n    console.log(\"userinfo : \",userinfo)\n    //Qty\n    const [qty,setQty] = useState(1)\n    const [rating,setRating] = useState(1)\n    const [comment,setComment] = useState('')\n\n    useEffect(()=>{\n        // const fetchProduct =async()=>{\n        //   // const res = axios.get(\"/api/products\")\n        //   // res.data\n        //   const { data } = await axios.get(`/api/products/${id}`)\n        //   console.log(`/api/products/${id}`)\n        //   console.log(\"data:\",data)\n        //   setProduct(data)\n        // }\n        // fetchProduct()\n        dispatch(listProductDetails(id))\n      },[dispatch])\n\n      const addToCartHandler =()=>{\n        navigate(`/cart/${id}?qty=${qty}`)\n      }\n      const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(\n          createProductReview(id, {\n            rating,\n            comment,\n          })\n        )\n      }\n    return (\n          <>\n            <Link className='btn btn-dark my-3' to=\"/\">\n                Go back\n            </Link>\n            {\n                loading ? <Loader/> : error ? <Message variant=\"danger\">{error}</Message>\n                :(\n                <>\n                <Row>\n                <Col md={6}>\n                    <Image src={product.image} alt={product.name} fluid></Image>\n                </Col>\n                <Col md={3}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroupItem>\n                            <h3>{product.name}</h3>\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            <Rating value={product.rating} text={`${product.numReviews}`}/>\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            Price: {product.price}\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            Description : {product.description}\n                        </ListGroupItem>\n                    </ListGroup>\n                </Col>\n                <Col md={3}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroupItem>\n                                <Row>\n                                    <Col>\n                                        Price:\n                                    </Col>\n                                    <Col>\n                                        <strong>${product.price}</strong>\n                                    </Col>\n                                </Row>\n                            </ListGroupItem>\n                            <ListGroupItem>\n                                <Row>\n                                    <Col>\n                                        Status:\n                                    </Col>\n                                    <Col>\n                                        {product.countInStock > 0 ? \"available\" : \"out of stock\" }\n                                    </Col>\n                                </Row>\n                            </ListGroupItem>\n                            {product.countInStock > 0  && (\n                                <ListGroupItem>\n                                    <Row>\n                                        <Col>\n                                            Qty\n                                        </Col>\n                                        <Col>\n                                        <Form.Control as=\"select\" value={qty} onChange={(e)=>setQty(e.target.value)}>\n                                            {[...Array(product.countInStock).keys()].map(x => (\n                                                <option key={x+1} value={x+1}>\n                                                    {x+1}\n                                                </option>\n                                            ))}\n                                        </Form.Control>\n                                        </Col>\n                                    </Row>\n                                </ListGroupItem>\n                            )}\n                            <ListGroupItem>\n                                <Button onClick={addToCartHandler}\n                                className=\"btn-block\" type=\"button\" disabled={product.countInStock === 0}>\n                                    Add to Cart\n                                </Button>\n                            </ListGroupItem>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successProductReview && (\n                    <Message variant='success'>\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userinfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/signIn'>sign in</Link> to write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n            </>\n            )\n            }\n            \n          </>\n      )\n  \n}\n\nexport default ProductScreen\n","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/CartScreen.jsx",["223"],[],"import React, { useEffect } from 'react'\nimport { Link, useParams, useLocation, useNavigate,useSearchParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Row,Col,ListGroup,Image,Form,Button,Card, ListGroupItem} from \"react-bootstrap\"\nimport Message from \"../components/Message\"\n//import action\n import { addToCart, removeToCart } from \"../actions/cartAction\"\n\nfunction CartScreen() {\n    const location = useLocation()\n    let { id } = useParams();\n    console.log( id ) \n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    // const [searchParams] = useSearchParams();\n\n    // const redirect = searchParams.get(\"redirect\");\n    // const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    console.log(cartItems)\n    useEffect(()=>{\n        if(id){\n            dispatch(addToCart(id,qty))\n        }\n    },[dispatch,id,qty])\n\n    console.log(qty)\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeToCart(id))\n        console.log('remove')\n    }\n\n    const checkoutHandler = () => {\n        // navigate(`/${redirect}`);\n        // navigate(\"/login?redirect=shipping\")\n        navigate('/shipping')\n        console.log(\"check\")\n    }\n  return (\n    <Row>\n        <Col md={8}>\n            <h1>Shopping Cart</h1>\n            {cartItems.length === 0 ? \n            (\n            <Message>Your Cart is Empty <Link to=\"/\">Go back</Link></Message>\n            ) :\n            (\n                <ListGroup variant=\"flush\">\n                    {\n                        cartItems.map(item => (\n                            <ListGroupItem key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                    </Col>\n                                    <Col md={3}>\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </Col>\n                                    <Col md={2}>${item.price}</Col>\n                                    <Col md={2}>\n                                        <Form.Control as=\"select\" value={item.qty} onChange={(e)=>dispatch(addToCart(item.product,Number(e.target.value)))}>\n                                            {[...Array(item.countInStock).keys()].map(x => (\n                                                <option key={x+1} value={x+1}>\n                                                    {x+1}\n                                                </option>\n                                            ))}\n                                        </Form.Control>\n                                    </Col>\n                                    <Col md={2}>\n                                        <Button type=\"button\" variant=\"light\" onClick={()=>removeFromCartHandler(item.product)}>\n                                            <i className='fas sa-trash'></i>\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </ListGroupItem>\n                        ))\n                    }\n                </ListGroup>\n            )}\n        </Col>\n        <Col md={4}>\n            <Card>\n                <ListGroup>\n                    <ListGroupItem>\n                        <h2>Subtotal ({cartItems.reduce((acc,item)=>acc + item.qty,0)}) items</h2>\n                        ${cartItems.reduce((acc,item)=>acc + (item.qty * item.price),0).toFixed(2)}\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <Button type=\"button\" className='btn-block' disabled = {cartItems.length === 0}\n                        onClick={checkoutHandler}>Proceed to checkout</Button>\n                    </ListGroupItem>\n                </ListGroup>\n            </Card>\n        </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/Footer.jsx",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/components/Header.jsx",["224","225","226"],[],"import React from 'react'\nimport {Navbar, Nav, Container, Image, NavDropdown} from \"react-bootstrap\"\nimport { Routes,Route } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap';\nimport {useDispatch, useSelector} from \"react-redux\"\nimport { logout } from '../actions/userAction';\nimport SearchBox from './searchBox';\n\n\nfunction Header() {\n\n  const userLogin = useSelector(state => state.user)\n  const dispatch = useDispatch()\n  const {userinfo} = userLogin\n  const logoutHandler = () =>{\n    dispatch(logout())\n    \n  }\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant =\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n            <Navbar.Brand href=\"/\">ProShop</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              {/* <Routes>\n              <Route render={()=> <SearchBox/>}></Route>\n              </Routes> */}\n              \n              <SearchBox/>\n            <Nav className=\"ml-auto\">\n              <Nav.Link href=\"/cart\"><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                \n            {userinfo ? (\n              <NavDropdown title={userinfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>\n                      Profile\n                    </NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                      Logout\n                    </NavDropdown.Item>\n              </NavDropdown>\n            ) : <Nav.Link href=\"/signIn\"><i className=\"fas fa-user\"></i>Sign In</Nav.Link>}\n\n            {userinfo && userinfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            \n            </Nav>\n            </Navbar.Collapse>\n        </Container>\n    </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","/Users/monarch/Documents/MERN/ProShop/frontend/src/products.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/const/productConst.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/const/cartConstant.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/components/Rating.jsx",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/components/Message.jsx",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/components/Loader.jsx",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/actions/productAction.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/components/Product.jsx",["227"],[],"import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport products from '../products'\nimport Rating from './Rating'\n\nfunction Product({product}) {\n  return (\n    <Card className=\"my-3 p-3 rounded\">\n        <Link to={`/product/${product._id}}`}>\n            <Card.Img src={product.image} variant=\"top\"/>\n        </Link>\n\n        <Card.Body>\n        <Link to={`/product/${product._id}}`}>\n            <Card.Title as='div'>\n                <strong>{product.name}</strong>\n            </Card.Title>\n\n        </Link>\n        <Card.Text as=\"div\">\n            <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n            {/* <div className='my-3'>\n                {product.rating} from {product.numReviews} reviews\n            </div> */}\n        </Card.Text>\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\n        </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","/Users/monarch/Documents/MERN/ProShop/frontend/src/actions/cartAction.js",["228"],[],"import axios from \"axios\"\n// import { DRAFT_STATE } from \"immer/dist/internal\"\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM , CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from \"../const/cartConstant\"\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n  \n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty,\n      },\n    })\n  \n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n///getstate is used to get any state ->ptoducts, carts, orders\nexport const removeToCart = (id) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n  \n    dispatch({\n      type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAdress = (data) => async (dispatch) => {\n\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n      payload: data,\n  })\n  localStorage.setItem('shippingadress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => async (dispatch) => {\n\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n      payload: data,\n  })\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n\n// export const addToCart =(id,qty)=>async(dispatch,getState)=>{\n//     const { data } = await axios.get(`/api/products/${id}`)\n\n//     dispatch({\n//         type: CART_ADD_ITEM,\n//         payload:{\n//             product : data._id,\n//             name: data.name,\n//             image:data.image,\n//             price:data.price,\n//             countInStock:data.countInStock,\n//             qty\n//         }\n//     })\n\n//     localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\n// }","/Users/monarch/Documents/MERN/ProShop/frontend/src/reducers/userReducers.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/const/userConstant.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/LoginScreen.jsx",["229"],[],"import React, {useState, useEffect} from 'react'\nimport { Link } from \"react-router-dom\"\nimport { Form, Button, Row, Col} from \"react-bootstrap\"\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom'\nimport { useDispatch, useSelector} from  \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport { login } from \"../actions/userAction\"\nimport FormContainer from '../components/FormContainer'\n\nfunction LoginScreen() {\n    const [email,setEmail] = useState('');\n    const [password,setPassword] = useState('');\n    const location = useLocation()\n    const navigate = useNavigate()\n    const [searchParams] = useSearchParams();\n    // const redirect = searchParams.get(\"redirect\");\n    const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.user)\n    const { loading, error, userinfo} = userLogin\n\n    // const redirect = location.search ? location.search.split('=')[1] : '/'\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    //we want -> dont want to come to loginScreen if we alrready logged in\n    useEffect(()=>{\n        if(userinfo){\n            navigate(redirect)\n            // navigate(`/${redirect}`);\n        }\n    },[navigate, userinfo, redirect])\n    const submitHandler = (e) =>{\n        e.preventDefault()\n        //Dispatch login\n        dispatch(login(email,password))\n    }\n  return (\n    <FormContainer>\n      <h1>Sign in</h1>\n      {error && <Message variant=\"danger\" >{error}</Message>}\n      {loading && <Loader/>}\n      <Form onSubmit={submitHandler}>\n            <Form.Group controlId='email'>\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control type='email' placeholder='Enter email' \n                value={email} onChange={(e)=>setEmail(e.target.value)} ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control type='password' placeholder='Enter password' \n                value={password} onChange={(e)=>setPassword(e.target.value)} ></Form.Control>\n            </Form.Group>\n            <Button className=\"my-3\" type=\"submit\" variant='primary'>Sign In</Button>\n      </Form>\n      <Row className=\"py-3\">\n            <Col>\n                New Customer? <Link to={redirect ? `/register?redirect=${redirect}`:'register'}>Register Now</Link>\n            </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","/Users/monarch/Documents/MERN/ProShop/frontend/src/actions/userAction.js",["230"],[],"import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_DETAILS_RESET,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS\n} from \"../const/userConstant\"\nimport axios from \"axios\"\nimport { ORDER_LIST_MY_RESET} from \"../const/orderConstant\"\nexport const login = (email,password) => async (dispatch) => {\n    try{\n        dispatch({\n            type:USER_LOGIN_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-Type':'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/users/login', {email,password},config)\n\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userinfo',JSON.stringify(data))\n    }\n    catch(error){\n        dispatch({ \n            type: USER_LOGIN_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const register = (name,email,password) => async (dispatch) => {\n    try{\n        dispatch({\n            type:USER_REGISTER_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-Type':'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/users', {name,email,password},config)\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n          })\n\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userinfo',JSON.stringify(data))\n    }\n    catch(error){\n        dispatch({ \n            type: USER_REGISTER_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n          type: USER_DETAILS_REQUEST,\n        })\n    \n        const {\n          user: { userinfo },\n        } = getState()\n    \n        const config = {\n          headers: {\n            Authorization: `Bearer ${userinfo.token}`,\n          },\n        }\n    \n        const { data } = await axios.get(`/api/users/${id}`, config)\n     // Log user in immediately after successful registration\n        dispatch({\n          type: USER_DETAILS_SUCCESS,\n          payload: data,\n        })\n      } catch (error) {\n        const message =\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        if (message === 'Not authorized, token failed') {\n          dispatch(logout())\n        }\n        dispatch({\n          type: USER_DETAILS_FAIL,\n          payload: message,\n        })\n    }\n}\n\nexport const getUpdateDetails = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n          type: USER_UPDATE_REQUEST,\n        })\n    \n        const {\n          userLogin: { userinfo },\n        } = getState()\n    \n        const config = {\n          headers: {\n            Authorization: `Bearer ${userinfo.token}`,\n          },\n        }\n    \n        const { data } = await axios.put(`/api/users/profile`, user,config)\n     // Log user in immediately after successful registration\n        dispatch({\n          type: USER_UPDATE_SUCCESS,\n          payload: data,\n        })\n      } catch (error) {\n        const message =\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        if (message === 'Not authorized, token failed') {\n          dispatch(logout())\n        }\n        dispatch({\n          type: USER_DETAILS_FAIL,\n          payload: message,\n        })\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n      dispatch({\n        type: USER_LIST_REQUEST,\n      })\n  \n      const {\n        userLogin: { userinfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userinfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.get(`/api/users`,config)\n   // Log user in immediately after successful registration\n      dispatch({\n        type: USER_LIST_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n      }\n      dispatch({\n        type: USER_LIST_FAIL,\n        payload: message,\n      })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n      dispatch({\n        type: USER_DELETE_REQUEST,\n      })\n  \n      const {\n        userLogin: { userinfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userinfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.delete(`/api/users/${id}`,config)\n   // Log user in immediately after successful registration\n      dispatch({\n        type: USER_DELETE_SUCCESS,\n      })\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      if (message === 'Not authorized, token failed') {\n        dispatch(logout())\n      }\n      dispatch({\n        type: USER_LIST_FAIL,\n        payload: message,\n      })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userinfo')\n    localStorage.removeItem('cartItems')\n    localStorage.removeItem('shippingAddress')\n    localStorage.removeItem('paymentMethod')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    // dispatch({ type: USER_LIST_RESET })\n    document.location.href = '/signIn'\n\n}","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/FormContainer.jsx",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/RegisterScreen.jsx",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/ProfileScreen.jsx",["231","232","233"],[],"import React, {useState, useEffect} from 'react'\nimport { Link } from \"react-router-dom\"\nimport { Table,Form, Button, Row, Col} from \"react-bootstrap\"\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector} from  \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport { getUserDetails, getUpdateDetails } from \"../actions/userAction\"\nimport {listMyOrders} from \"../actions/orderAction\"\nimport { USER_UPDATE_PROFILE_RESET } from '../const/userConstant'\n\nfunction ProfileScreen() {\n    const [name, setName] = useState('');\n    const [email,setEmail] = useState('');\n    const [password,setPassword] = useState('');\n    const [cpassword,setCPassword] = useState('');\n    const [message,setMessage] = useState('');\n\n    const location = useLocation()\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    console.log(\"userdetails\",userDetails)\n\n    const userLogin = useSelector(state => state.user)\n    const { userinfo } = userLogin\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { success } = userUpdate\n\n    const orderMyList = useSelector(state => state.orderListMy)\n    console.log(\"orderListMy\",orderMyList)\n    const {loading:loadingMyOrder, error:errorOrders, orders} = orderMyList\n\n    console.log(\"userinfo\",userinfo)\n    const { loading, error, user } = userDetails\n    console.log(\"loading :\",loading,error,user)\n    //we want -> dont want to come to loginScreen if we alrready logged in\n    useEffect(()=>{\n        if(!userinfo){\n            navigate('/signin')\n        }\n        else{\n            if(!user?.name){\n                // dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            }\n            else{\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    },[dispatch,navigate, userinfo, user])\n    const submitHandler = (e) =>{\n        e.preventDefault()\n        //first check cpassword with password\n        if(password !== cpassword){\n            setMessage(\"Password doesn't matched\")\n        }\n        else{\n            dispatch(getUpdateDetails({ id : user._id,name,email,password}))\n        }\n        \n    }\n  return (\n    <Row>\n    <Col md={3}>\n    <h1>User Profile</h1>\n      {message && <Message variant=\"danger\" >{message}</Message>}\n      {error && <Message variant=\"danger\" >{error}</Message>}\n      {success && <Message variant=\"danger\" >Profile Updated</Message>}\n      {loading && <Loader/>}\n      <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n                <Form.Label>Name </Form.Label>\n                <Form.Control type='name' placeholder='Enter name' \n                value={name} onChange={(e)=>setName(e.target.value)} ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='email'>\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control type='email' placeholder='Enter email' \n                value={email} onChange={(e)=>setEmail(e.target.value)} ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control type='password' placeholder='Enter password' \n                value={password} onChange={(e)=>setPassword(e.target.value)} ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={cpassword}\n                onChange={(e) => setCPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Button className=\"my-3\" type=\"submit\" variant='primary'>Update</Button>\n        </Form>\n        </Col>\n        <Col md={9}>\n            <h2>My Orders</h2>\n            {loadingMyOrder ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ):(\n            <Table striped bordered hover responsive className='table-sm'>\n                <thead>\n                    <tr>\n                    <th>ID</th>\n                    <th>DATE</th>\n                    <th>TOTAL</th>\n                    <th>PAID</th>\n                    <th>DELIVERED</th>\n                    <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {orders.map((order)=>(\n                        <tr key={order._id}>\n                            <td>{order._id}</td>\n                            <td>{order.createdAt.substring(0, 10)}</td>\n                            <td>{order.totalPrice}</td>\n                            <td>{order.isPaid ? order.paidAt.substring(0,10):(\n                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                            )}</td>\n                            <td>\n                            {order.isDelivered ? (\n                            order.deliveredAt.substring(0, 10)\n                            ) : (\n                            <i className='fas fa-times' style={{ color: 'red' }}></i>\n                            )}\n                        </td>\n                        <td>\n                            <LinkContainer to={`/order/${order._id}`}>\n                            <Button className='btn-sm' variant='light'>\n                                Details\n                            </Button>\n                            </LinkContainer>\n                        </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n        )}\n        </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n\n\n","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/ShippingScreen.jsx",["234","235","236","237","238","239"],[],"import React, {useState} from 'react'\nimport { Form, Button, Row, Col} from \"react-bootstrap\"\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector} from  \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport CheckoutStep from '../components/CheckoutStep'\nimport { register } from \"../actions/userAction\"\nimport { saveShippingAdress } from '../actions/cartAction'\nimport FormContainer from '../components/FormContainer'\nfunction ShippingScreen() {\n\n    const cart = useSelector(state=>state.cart)\n    const { shippingAddress} = cart\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n    const submitHandler = (e) =>{\n        e.preventDefault()\n        // console.log('submit')\n        dispatch(saveShippingAdress({ address,city,postalCode,country}))\n        navigate('/payment')\n    }\n  return (\n    <FormContainer>\n      <CheckoutStep step1 step2 />\n      <h1>Shipping</h1>\n      <br></br>\n      <Form onSubmit={submitHandler}>\n            <Form.Group controlId='address'>\n                <Form.Label>Address </Form.Label>\n                <Form.Control type='name' placeholder='Enter name' \n                value={address} onChange={(e)=>setAddress(e.target.value)} ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='city'>\n                <Form.Label>City</Form.Label>\n                <Form.Control type='city' placeholder='Enter City' \n                value={city} onChange={(e)=>setCity(e.target.value)} ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='postalCode'>\n                <Form.Label>Postal Code</Form.Label>\n                <Form.Control type='postalCode' placeholder='Enter PostalCode' \n                value={postalCode} onChange={(e)=>setPostalCode(e.target.value)} ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='country'>\n                <Form.Label>Country</Form.Label>\n                <Form.Control type='country' placeholder='Country' \n                value={country} onChange={(e)=>setCountry(e.target.value)} ></Form.Control>\n            </Form.Group>\n            <Button className=\"my-3\" type=\"submit\" variant='primary'>Continue</Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/CheckoutStep.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/PaymentMethodScreen.jsx",["240","241","242","243","244","245"],[],"import React, {useState} from 'react'\nimport { Form, Button, Row, Col, FormLabel, FormGroup, FormCheck} from \"react-bootstrap\"\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector} from  \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport CheckoutStep from '../components/CheckoutStep'\nimport { register } from \"../actions/userAction\"\nimport { savePaymentMethod } from '../actions/cartAction'\nimport FormContainer from '../components/FormContainer'\nfunction PaymentMethodScreen() {\n\n    const cart = useSelector(state=>state.cart)\n    const { shippingAddress} = cart\n\n    if(!shippingAddress){\n        navigate('/shipping')\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n    \n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) =>{\n        e.preventDefault()\n        // console.log('submit')\n        dispatch(savePaymentMethod(paymentMethod))\n        navigate('/placeorder')\n    }\n  return (\n    <FormContainer>\n      <CheckoutStep step1 step2 step3/>\n      <h1>Payment Method</h1>\n      <br></br>\n      <Form onSubmit={submitHandler}>\n            <FormGroup>\n                <FormLabel as=\"legend\">\n                    Select Method\n                </FormLabel>\n                <Col>\n                    <FormCheck type=\"radio\" label=\"PayPal or Credit Card\" id=\"PayPal\" name=\"paymentMethod\" \n                    value='PayPal' checked onChange={(e)=>setPaymentMethod(e.target.value)}>\n\n                    </FormCheck>\n                </Col>\n            </FormGroup>\n            <Button className=\"my-3\" type=\"submit\" variant='primary'>Continue</Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentMethodScreen\n\n","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/PlaceOrderScreen.jsx",["246","247","248","249"],[],"import React, {useEffect} from 'react'\nimport { Form, Button, Row, Col, ListGroup, Image, Card, ListGroupItem} from \"react-bootstrap\"\nimport { Link } from 'react-router-dom'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector} from  \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport CheckoutStep from '../components/CheckoutStep'\nimport { createOrder } from \"../actions/orderAction\"\n\nfunction PlaceOrderScreen() {\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    \n    const cart = useSelector((state) => state.cart)\n    \n\n    const addDecimals = (num) => {\n        return (Math.round(num * 100)/100).toFixed(2)\n    }\n\n    //Calculate Price\n    cart.itemsPrice = addDecimals(\n        cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n    // cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0))\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 200 ? 0 : 100)\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n    cart.totalPrice = (\n        Number(cart.itemsPrice) +\n        Number(cart.shippingPrice) +\n        Number(cart.taxPrice)\n      ).toFixed(2)\n    console.log(\"cart:\",cart)\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, success, error} = orderCreate\n\n    useEffect(()=>{\n        if(success){\n            navigate(`/order/${order._id}`)\n        }\n    },[navigate, success])\n    const placeOrderHandler = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n        // console.log('order!')\n    }\n  return (\n    <>\n      <CheckoutStep step1 step2 step3 step4/> \n      <Row>\n          <Col md={8}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                    <h2>Shipping</h2>\n                    <p>\n                        <strong>Address :  </strong>\n                        {cart.shippingAddress.address},\n                        {cart.shippingAddress.city} {cart.shippingAddress.postalCode}\n                        {cart.shippingAddress.country}\n                    </p>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                    <h2>Payment</h2>\n                    <p>\n                        <strong>Payment Method :  </strong>\n                        {cart.paymentMethod}\n                    </p>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                    <h2>Order Items</h2>\n                    <p>\n                        {cart.cartItems.length === 0 ? <Message>Cart is Empty</Message> : (\n                            <ListGroup variant=\"flush\">\n                                {cart.cartItems.map((item,index) => (\n                                    <ListGroup.Item key={index}>\n                                        <Row>\n                                            <Col md={1}>\n                                                <Image src={item.image} alt={item.name} fluid rounded>\n                                                </Image>\n                                            </Col>\n\n                                            <Col>\n                                                <Link to={`/product/${item.product}`}>\n                                                    {item.name}\n                                                </Link>\n                                            </Col>\n                                            <Col md={4}>\n                                                {item.qty} * {item.price} =${item.qty * item.price}\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                ))}\n                            </ListGroup>\n                        )}\n                    </p>\n                </ListGroup.Item>\n\n              </ListGroup>\n          </Col>\n          <Col md={4}>\n              <Card>\n                  <ListGroup variant =\"flush\">\n                        <ListGroupItem>\n                            <h2>Order Summary</h2>\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            <Row>\n                                <Col>\n                                    Items\n                                </Col>\n                                <Col>\n                                    ${cart.itemsPrice}\n                                </Col>\n                            </Row>\n                        </ListGroupItem>\n\n                        <ListGroupItem>\n                            <Row>\n                                <Col>\n                                    Shipping\n                                </Col>\n                                <Col>\n                                    ${cart.shippingPrice}\n                                </Col>\n                            </Row>\n                        </ListGroupItem>\n\n                        <ListGroupItem>\n                            <Row>\n                                <Col>\n                                    Tax\n                                </Col>\n                                <Col>\n                                    ${cart.taxPrice}\n                                </Col>\n                            </Row>\n                        </ListGroupItem>\n\n                        <ListGroupItem>\n                            <Row>\n                                <Col>\n                                    Total\n                                </Col>\n                                <Col>\n                                    ${cart.totalPrice}\n                                </Col>\n                            </Row>\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            {error && <Message variant =\"danger\">{error}</Message>}\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            <Button type='button' className=\"btn-block\" disabled={cart.cartItems === 0} onClick={placeOrderHandler}>\n                                Place Order\n                            </Button>\n                        </ListGroupItem>\n                  </ListGroup>\n              </Card>\n          </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","/Users/monarch/Documents/MERN/ProShop/frontend/src/reducers/orderReducers.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/const/orderConstant.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/actions/orderAction.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/OrderScreen.jsx",["250","251","252","253","254","255"],[],"import React, {useState, useEffect} from 'react'\nimport axios from \"axios\"\nimport { PayPalButton } from \"react-paypal-button-v2\"\nimport { Form, Button, Row, Col, ListGroup, Image, Card, ListGroupItem} from \"react-bootstrap\"\nimport { Link, useParams } from 'react-router-dom'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector} from  \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport { getOrderDetails, payOrder } from \"../actions/orderAction\"\nimport { ORDER_PAY_RESET } from '../const/orderConstant'\nfunction OrderScreen() {\n    let { id } = useParams();\n    id = String(id)\n    // let { orderId } = useParams();\n    console.log(\"id\",id)\n    const [sdkReady, setSdkReady] = useState(false)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    \n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, loading, error} = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading:loadingPay, success:successPay} = orderPay\n    const successPaymentHandler = (paymentResult) => {\n        console.log(paymentResult)\n        dispatch(payOrder(id,paymentResult))\n    }\n    if (!loading) {\n        //   Calculate prices\n        const addDecimals = (num) => {\n          return (Math.round(num * 100) / 100).toFixed(2)\n        }\n    \n        order.itemsPrice = addDecimals(\n          order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n        )\n      }\n      const addPayPalScript = async () =>{\n        const { data: clientId } = await axios.get('/api/config/paypal')\n        // console.log(clientId)\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n      useEffect(() => {\n        \n        if(!order || order._id !== id) {\n            dispatch({ type: ORDER_PAY_RESET})\n            dispatch(getOrderDetails(id))\n        }\n        else if (!order.isPaid) {\n            if (!window.paypal) {\n              addPayPalScript()\n            }\n        }\n        else{\n            setSdkReady(true)\n        }\n    }, [order, id])\n    // useEffect(()=>{\n    //   dispatch(getOrderDetails(id))\n    // },[dispatch,id])\n    \n  return loading ? <Loader/>:error ? <Message variant=\"danger\">{error}</Message>\n  : <>\n  <h1>Order {order._id}</h1>\n  <Row>\n          <Col md={8}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                    <h2>Shipping</h2>\n                    <p>\n                        <strong>Name: </strong> {order.user.name}\n                    </p>\n                    <p>\n                        <strong>Email: </strong>{' '}\n                        <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                    </p>\n                    <p>\n                        <strong>Address :  </strong>\n                        {order.shippingAddress.address},\n                        {order.shippingAddress.city} {order.shippingAddress.postalCode}\n                        {order.shippingAddress.country}\n                    </p>\n                    {order.isDelivered ? (\n                        <Message variant='success'>\n                        Delivered on {order.deliveredAt}\n                        </Message>\n                    ) : (\n                        <Message variant='danger'>Not Delivered</Message>\n                    )}\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n                <ListGroup.Item>\n                    <h2>Order Items</h2>\n                    <p>\n                        {order.orderItems.length === 0 ? <Message> No Orderd Placed!</Message> : (\n                            <ListGroup variant=\"flush\">\n                                {order.orderItems.map((item,index) => (\n                                    <ListGroup.Item key={index}>\n                                        <Row>\n                                            <Col md={1}>\n                                                <Image src={item.image} alt={item.name} fluid rounded>\n                                                </Image>\n                                            </Col>\n\n                                            <Col>\n                                                <Link to={`/product/${item.product}`}>\n                                                    {item.name}\n                                                </Link>\n                                            </Col>\n                                            <Col md={4}>\n                                                {item.qty} * {item.price} =${item.qty * item.price}\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                ))}\n                            </ListGroup>\n                        )}\n                    </p>\n                </ListGroup.Item>\n\n              </ListGroup>\n          </Col>\n          <Col md={4}>\n              <Card>\n                  <ListGroup variant =\"flush\">\n                        <ListGroupItem>\n                            <h2>Order Summary</h2>\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            <Row>\n                                <Col>\n                                    Items\n                                </Col>\n                                <Col>\n                                    ${order.itemsPrice}\n                                </Col>\n                            </Row>\n                        </ListGroupItem>\n\n                        <ListGroupItem>\n                            <Row>\n                                <Col>\n                                    Shipping\n                                </Col>\n                                <Col>\n                                    ${order.shippingPrice}\n                                </Col>\n                            </Row>\n                        </ListGroupItem>\n\n                        <ListGroupItem>\n                            <Row>\n                                <Col>\n                                    Tax\n                                </Col>\n                                <Col>\n                                    ${order.taxPrice}\n                                </Col>\n                            </Row>\n                        </ListGroupItem>\n\n                        <ListGroupItem>\n                            <Row>\n                                <Col>\n                                    Total\n                                </Col>\n                                <Col>\n                                    ${order.totalPrice}\n                                </Col>\n                            </Row>\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            {error && <Message variant =\"danger\">{error}</Message>}\n                        </ListGroupItem>\n                        {!order.isPaid && (\n                            <ListGroupItem>\n                                {loadingPay && <Loader/>}\n                                {!sdkReady ? <loader/> : (\n                                    <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler}/>\n                                )}\n                            </ListGroupItem>\n                        )}\n                        {/* <ListGroupItem>\n                            {/* <Button type='button' className=\"btn-block\" disabled={cart.cartItems === 0} onClick={placeOrderHandler}>\n                                Place Order\n                            </Button> */}\n                        {/* </ListGroupItem> */}\n                  </ListGroup>\n              </Card>\n          </Col>\n      </Row>\n  </>\n  \n}\n\nexport default OrderScreen\n","/Users/monarch/Documents/MERN/ProShop/frontend/src/screens/UserLIstScreen.jsx",["256","257","258","259"],[],"import React, {useState, useEffect} from 'react'\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport { Table, Button } from \"react-bootstrap\"\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector} from  \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport { listUsers, deleteUser } from \"../actions/userAction\"\n\nfunction UserListScreen() {\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const userList = useSelector(state => state.usersList)\n    const { loading,error, users} = userList\n    console.log(loading, error, users)\n\n    const userDelete = useSelector(state => state.user)\n    const { success: successDelete } = userDelete\n\n    const userLogin = useSelector(state => state.userDelete)\n    const { userinfo } = userLogin\n\n    console.log(userLogin)\n\n    useEffect(()=>{\n        if (userinfo && userinfo.isAdmin) {\n            dispatch(listUsers())\n          } else {\n            navigate('/signIn')\n          }\n    },[dispatch, successDelete])\n\n    const deleteHandler = (id) => {\n        if(window.confirm('Are you sure?')){\n            dispatch(userDelete(id))\n        }\n    }\n  return (\n    <div>\n      <h1>Users</h1>\n      {loading ? <Loader/> : error ? <Message variant=\"danger\">{error}</Message> :(\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>NAME</th>\n                    <th>EMAIL</th>\n                    <th>ADMIN</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    users.map(user => (\n                        <tr key={user._id}>\n                            <td>{user._id}</td>\n                            <td>{user.name}</td>\n                            <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\n                            <td>\n                                {user.isAdmin ? (\n                                        <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                    ) : (\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                    )}\n                            </td>\n                            <td>\n                                <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                    <Button variant='light' className='btn-sm'>\n                                    <i className='fas fa-edit'></i>\n                                    </Button>\n                                </LinkContainer>\n                                <Button\n                                    variant='danger'\n                                    className='btn-sm'\n                                    onClick={() => deleteHandler(user._id)}>\n                                    <i className='fas fa-trash'></i>\n                                </Button>\n                            </td>\n                        </tr>\n                    ))\n                }\n            </tbody>\n          </Table>\n      )}\n    </div>\n  )\n}\n\nexport default UserListScreen\n","/Users/monarch/Documents/MERN/ProShop/frontend/src/components/searchBox.js",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/components/Paginate.jsx",[],[],"/Users/monarch/Documents/MERN/ProShop/frontend/src/components/ProductCarousel.jsx",[],[],{"ruleId":"260","severity":1,"message":"261","line":1,"column":10,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"264","line":1,"column":27,"nodeType":"262","messageId":"263","endLine":1,"endColumn":42},{"ruleId":"260","severity":1,"message":"265","line":1,"column":44,"nodeType":"262","messageId":"263","endLine":1,"endColumn":55},{"ruleId":"260","severity":1,"message":"266","line":4,"column":10,"nodeType":"262","messageId":"263","endLine":4,"endColumn":29},{"ruleId":"260","severity":1,"message":"267","line":22,"column":7,"nodeType":"262","messageId":"263","endLine":22,"endColumn":17},{"ruleId":"260","severity":1,"message":"268","line":1,"column":16,"nodeType":"262","messageId":"263","endLine":1,"endColumn":24},{"ruleId":"260","severity":1,"message":"269","line":6,"column":10,"nodeType":"262","messageId":"263","endLine":6,"endColumn":14},{"ruleId":"260","severity":1,"message":"270","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":16},{"ruleId":"260","severity":1,"message":"271","line":11,"column":10,"nodeType":"262","messageId":"263","endLine":11,"endColumn":37},{"ruleId":"272","severity":1,"message":"273","line":50,"column":9,"nodeType":"274","endLine":50,"endColumn":19,"suggestions":"275"},{"ruleId":"260","severity":1,"message":"276","line":2,"column":52,"nodeType":"262","messageId":"263","endLine":2,"endColumn":67},{"ruleId":"260","severity":1,"message":"277","line":2,"column":33,"nodeType":"262","messageId":"263","endLine":2,"endColumn":38},{"ruleId":"260","severity":1,"message":"278","line":3,"column":10,"nodeType":"262","messageId":"263","endLine":3,"endColumn":16},{"ruleId":"260","severity":1,"message":"279","line":3,"column":17,"nodeType":"262","messageId":"263","endLine":3,"endColumn":22},{"ruleId":"260","severity":1,"message":"270","line":4,"column":8,"nodeType":"262","messageId":"263","endLine":4,"endColumn":16},{"ruleId":"260","severity":1,"message":"280","line":24,"column":13,"nodeType":"262","messageId":"263","endLine":24,"endColumn":17},{"ruleId":"260","severity":1,"message":"281","line":16,"column":12,"nodeType":"262","messageId":"263","endLine":16,"endColumn":24},{"ruleId":"260","severity":1,"message":"280","line":209,"column":15,"nodeType":"262","messageId":"263","endLine":209,"endColumn":19},{"ruleId":"260","severity":1,"message":"269","line":2,"column":10,"nodeType":"262","messageId":"263","endLine":2,"endColumn":14},{"ruleId":"260","severity":1,"message":"282","line":11,"column":10,"nodeType":"262","messageId":"263","endLine":11,"endColumn":35},{"ruleId":"260","severity":1,"message":"283","line":20,"column":11,"nodeType":"262","messageId":"263","endLine":20,"endColumn":19},{"ruleId":"260","severity":1,"message":"284","line":2,"column":24,"nodeType":"262","messageId":"263","endLine":2,"endColumn":27},{"ruleId":"260","severity":1,"message":"285","line":2,"column":29,"nodeType":"262","messageId":"263","endLine":2,"endColumn":32},{"ruleId":"260","severity":1,"message":"286","line":3,"column":10,"nodeType":"262","messageId":"263","endLine":3,"endColumn":21},{"ruleId":"260","severity":1,"message":"287","line":5,"column":8,"nodeType":"262","messageId":"263","endLine":5,"endColumn":15},{"ruleId":"260","severity":1,"message":"288","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":14},{"ruleId":"260","severity":1,"message":"289","line":8,"column":10,"nodeType":"262","messageId":"263","endLine":8,"endColumn":18},{"ruleId":"260","severity":1,"message":"284","line":2,"column":24,"nodeType":"262","messageId":"263","endLine":2,"endColumn":27},{"ruleId":"260","severity":1,"message":"286","line":3,"column":10,"nodeType":"262","messageId":"263","endLine":3,"endColumn":21},{"ruleId":"260","severity":1,"message":"287","line":5,"column":8,"nodeType":"262","messageId":"263","endLine":5,"endColumn":15},{"ruleId":"260","severity":1,"message":"288","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":14},{"ruleId":"260","severity":1,"message":"289","line":8,"column":10,"nodeType":"262","messageId":"263","endLine":8,"endColumn":18},{"ruleId":"290","severity":1,"message":"291","line":17,"column":9,"nodeType":"262","messageId":"292","endLine":17,"endColumn":17},{"ruleId":"260","severity":1,"message":"293","line":2,"column":10,"nodeType":"262","messageId":"263","endLine":2,"endColumn":14},{"ruleId":"260","severity":1,"message":"286","line":4,"column":10,"nodeType":"262","messageId":"263","endLine":4,"endColumn":21},{"ruleId":"260","severity":1,"message":"288","line":7,"column":8,"nodeType":"262","messageId":"263","endLine":7,"endColumn":14},{"ruleId":"272","severity":1,"message":"294","line":43,"column":7,"nodeType":"274","endLine":43,"endColumn":26,"suggestions":"295"},{"ruleId":"260","severity":1,"message":"293","line":4,"column":10,"nodeType":"262","messageId":"263","endLine":4,"endColumn":14},{"ruleId":"260","severity":1,"message":"296","line":4,"column":16,"nodeType":"262","messageId":"263","endLine":4,"endColumn":22},{"ruleId":"260","severity":1,"message":"286","line":6,"column":10,"nodeType":"262","messageId":"263","endLine":6,"endColumn":21},{"ruleId":"260","severity":1,"message":"297","line":19,"column":11,"nodeType":"262","messageId":"263","endLine":19,"endColumn":19},{"ruleId":"260","severity":1,"message":"298","line":25,"column":41,"nodeType":"262","messageId":"263","endLine":25,"endColumn":51},{"ruleId":"272","severity":1,"message":"299","line":66,"column":8,"nodeType":"274","endLine":66,"endColumn":19,"suggestions":"300"},{"ruleId":"260","severity":1,"message":"268","line":1,"column":16,"nodeType":"262","messageId":"263","endLine":1,"endColumn":24},{"ruleId":"260","severity":1,"message":"286","line":4,"column":10,"nodeType":"262","messageId":"263","endLine":4,"endColumn":21},{"ruleId":"260","severity":1,"message":"301","line":8,"column":21,"nodeType":"262","messageId":"263","endLine":8,"endColumn":31},{"ruleId":"272","severity":1,"message":"302","line":32,"column":7,"nodeType":"274","endLine":32,"endColumn":32,"suggestions":"303"},"no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","'applyMiddleware' is defined but never used.","'createStore' is defined but never used.","'composeWithDevTools' is defined but never used.","'middleware' is assigned a value but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'products' is defined but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["304"],"'useSearchParams' is defined but never used.","'Image' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'data' is assigned a value but never used.","'searchParams' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'location' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'useLocation' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'register' is defined but never used.","no-use-before-define","'navigate' was used before it was defined.","usedBeforeDefined","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["305"],"'Button' is defined but never used.","'navigate' is assigned a value but never used.","'successPay' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["306"],"'deleteUser' is defined but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'userinfo'. Either include them or remove the dependency array.",["307"],{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},"Update the dependencies array to be: [dispatch, id]",{"range":"316","text":"317"},"Update the dependencies array to be: [navigate, order._id, success]",{"range":"318","text":"319"},"Update the dependencies array to be: [order, id, dispatch]",{"range":"320","text":"321"},"Update the dependencies array to be: [dispatch, navigate, successDelete, userinfo]",{"range":"322","text":"323"},[2017,2027],"[dispatch, id]",[1525,1544],"[navigate, order._id, success]",[2371,2382],"[order, id, dispatch]",[1058,1083],"[dispatch, navigate, successDelete, userinfo]"]